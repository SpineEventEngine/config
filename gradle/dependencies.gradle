/*
 * Copyright 2018, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This file describes shared dependencies of Spine sub-projects.
 *
 * Inspired by dependency management of the Uber's NullAway project:
 *  https://github.com/uber/NullAway/blob/master/gradle/dependencies.gradle
 */

// Repositories to which we may publish. Normally, only one repository will be used.
// See `publish.gradle` for details of the publishing process.

ext.publishingRepos = [
        
    mavenTeamDev: [
        releases    : "http://maven.teamdev.com/repository/spine",
        snapshots   : "http://maven.teamdev.com/repository/spine-snapshots",
        credentials : "credentials.properties"
    ],

    cloudRepo: [
        releases    : "https://spine.mycloudrepo.io/public/repositories/releases",
        snapshots   : "https://spine.mycloudrepo.io/public/repositories/snapshots",
        credentials : "cloudrepo.properties"
    ]
]

// Repository to into with to publish artifacts.
ext {
    publishToRepository = publishingRepos.cloudRepo
}

// Specific repositories.
ext.repos = [
    // Old Archiva Repositories
    //    spine             : "http://maven.teamdev.com/repository/spine",
    //    spineSnapshots    : "http://maven.teamdev.com/repository/spine-snapshots",
    oldSpine          : publishingRepos.mavenTeamDev.releases,
    oldSpineSnapshots : publishingRepos.mavenTeamDev.snapshots,
        
    // New CloudRepo Repositories
    spine             : publishingRepos.cloudRepo.releases,
    spineSnapshots    : publishingRepos.cloudRepo.snapshots,

    // Snapshots of Error Prone and Guava.
    sonatypeSnapshots : "https://oss.sonatype.org/content/repositories/snapshots",

    gradlePlugins     : "https://plugins.gradle.org/m2/"
]

//noinspection GroovyAssignabilityCheck
final def versions = [
    slf4j            : "1.7.25",
    checkerFramework : "2.5.2",
    errorProne       : "2.3.2",
    errorProneJavac  : "9+181-r4173-1", // taken from here: https://github.com/tbroyer/gradle-errorprone-plugin/blob/v0.6/build.gradle.kts    
    errorPronePlugin : "0.6",
    protobufPlugin   : "0.8.5",
    appengineApi     : "1.9.70",
    appenginePlugin  : "1.3.5",
    findBugs         : "3.0.2",
    guava            : "26.0-jre",
    protobuf         : "3.6.1",
    grpc             : "1.15.0",
    junit5           : "5.3.1",
    junitPioneer     : "0.2.0",
    truth            : "0.42",
    httpClient       : "1.27.0",
    apacheValidator  : "1.4.0"
]

//noinspection GroovyAssignabilityCheck
final def build = [
    errorProneJavac        : "com.google.errorprone:javac:$versions.errorProneJavac",
    errorProneAnnotations  : "com.google.errorprone:error_prone_annotations:$versions.errorProne",
    errorProneCheckApi     : "com.google.errorprone:error_prone_check_api:$versions.errorProne",
    errorProneCore         : "com.google.errorprone:error_prone_core:$versions.errorProne",
    errorProneTestHelpers  : "com.google.errorprone:error_prone_test_helpers:$versions.errorProne",

    checkerAnnotations     : "org.checkerframework:checker-qual:$versions.checkerFramework",
    checkerDataflow        : ["org.checkerframework:dataflow:$versions.checkerFramework",
                              "org.checkerframework:javacutil:$versions.checkerFramework"],

    //TODO:2018-06-13:alexander.yevsyukov: Remove this dependency after Guava migrates from it.
    jsr305Annotations      : "com.google.code.findbugs:jsr305:$versions.findBugs",
        
    guava                  : "com.google.guava:guava:$versions.guava",
    slf4j                  : "org.slf4j:slf4j-api:$versions.slf4j",
    protobuf               : ["com.google.protobuf:protobuf-java:$versions.protobuf",
                              "com.google.protobuf:protobuf-java-util:$versions.protobuf"],
    protoc                 : "com.google.protobuf:protoc:$versions.protobuf",
    googleHttpClient       : "com.google.http-client:google-http-client:$versions.httpClient",
    appengineApi           : "com.google.appengine:appengine-api-1.0-sdk:$versions.appengineApi",
    apacheValidator        : "commons-validator:commons-validator:$versions.apacheValidator",

    ci: "true" == System.getenv("CI"),

    gradlePlugins: [
        errorProne: "net.ltgt.gradle:gradle-errorprone-plugin:$versions.errorPronePlugin",
        protobuf: "com.google.protobuf:protobuf-gradle-plugin:$versions.protobufPlugin",
        appengine: "com.google.cloud.tools:appengine-gradle-plugin:$versions.appenginePlugin"
    ]
]

//noinspection GroovyAssignabilityCheck
final def gen = [
    javaPoet : "com.squareup:javapoet:1.9.0"
]

//noinspection GroovyAssignabilityCheck
final def grpc = [
    grpcStub               : "io.grpc:grpc-stub:$versions.grpc",
    grpcOkHttp             : "io.grpc:grpc-okhttp:$versions.grpc",
    grpcProtobuf           : "io.grpc:grpc-protobuf:$versions.grpc",
    grpcNetty              : "io.grpc:grpc-netty:$versions.grpc",
]

//noinspection GroovyAssignabilityCheck
final def test = [
    junit5Api     : ["org.junit.jupiter:junit-jupiter-api:$versions.junit5",
                     "org.junit.jupiter:junit-jupiter-params:$versions.junit5",
                     "org.apiguardian:apiguardian-api:1.0.0"],
    junit5Runner  : "org.junit.jupiter:junit-jupiter-engine:$versions.junit5",
    junitPioneer  : "org.junit-pioneer:junit-pioneer:$versions.junitPioneer",
    slf4j         : "org.slf4j:slf4j-jdk14:$versions.slf4j",
    guavaTestlib  : "com.google.guava:guava-testlib:$versions.guava",
    mockito       : "org.mockito:mockito-core:2.12.0",
    hamcrest      : "org.hamcrest:hamcrest-all:1.3",
    truth         : ["com.google.truth:truth:$versions.truth",
                     "com.google.truth.extensions:truth-java8-extension:$versions.truth",
                     "com.google.truth.extensions:truth-proto-extension:$versions.truth"]
]

//noinspection GroovyAssignabilityCheck
final def scripts = [
    testArtifacts          : "$rootDir/config/gradle/test-artifacts.gradle",
    testOutput             : "$rootDir/config/gradle/test-output.gradle",
    javadocOptions          : "$rootDir/config/gradle/javadoc-options.gradle",
    filterInternalJavadocs : "$rootDir/config/gradle/filter-internal-javadoc.gradle",
    jacoco                 : "$rootDir/config/gradle/jacoco.gradle",
    publish                : "$rootDir/config/gradle/publish.gradle",
    publishProto            : "$rootDir/config/gradle/publish-proto.gradle",
    javacArgs              : "$rootDir/config/gradle/javac-args.gradle"
]

ext.deps = [
    "build"    : build,
    "grpc"     : grpc,
    "gen"      : gen,
    "test"     : test,
    "versions" : versions,
    "scripts"  : scripts  
]
