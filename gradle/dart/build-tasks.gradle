/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

final def GROUP = 'Dart'
final def packageIndex = "$projectDir/.packages" as File

/**
 * Executes the given `pub` command depending on the current OS.
 *
 * @param params the command params, platform-independent
 */
def runPub(final String... params) {
    exec {
        workingDir = projectDir
        final String command = Os.isFamily(Os.FAMILY_WINDOWS) ? 'pub.bat' : 'pub'
        commandLine = [command] + Arrays.asList(params)
    }
}

task resolveDependencies {
    group = GROUP
    description = 'Fetches the dependencies declared via `pubspec.yaml`.'

    inputs.file "$projectDir/pubspec.yaml"
    outputs.file packageIndex

    doLast {
        runPub 'get'
    }

    mustRunAfter 'cleanPackageIndex'
}

tasks['assemble'].dependsOn 'resolveDependencies'

task cleanPackageIndex(type: Delete) {
    group = GROUP
    description = 'Deletes the `.packages` file on this Dart module.'
    delete = [packageIndex]
}

tasks['clean'].dependsOn 'cleanPackageIndex'

task testDart {
    group = GROUP
    description = 'Runs Dart tests declared in the `./test` directory. See `https://pub.dev/packages/test#running-tests`.'

    doLast {
        runPub 'run', 'test'
    }

    mustRunAfter 'resolveDependencies'
}

tasks['check'].dependsOn 'testDart'
