/*
 * Copyright 2022, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import org.gradle.kotlin.dsl.dependencies
import org.gradle.kotlin.dsl.withType
import org.jetbrains.dokka.gradle.DokkaTask
import io.spine.internal.dependency.Dokka
import java.time.LocalDate

plugins {
    id("org.jetbrains.dokka")
}

/**
 * To generate the documentation as seen from Java perspective,
 * the kotlin-as-java plugin was added to the Dokka plugins classpath.
 *
 * @see <a href="https://github.com/Kotlin/dokka#output-formats">
 *     Dokka output formats</a>
 */
dependencies {
    dokkaPlugin("org.jetbrains.dokka:kotlin-as-java-plugin:${Dokka.GradlePlugin.version}")
}

tasks.withType<DokkaTask>().configureEach {
    outputDirectory.set(buildDir.resolve("docs/dokka"))

    /**
     * In order to modify the styles Dokka uses for the generated documentation we provide
     * a configuration to the Dokka Base Plugin.
     *
     * @see <a href="https://kotlin.github.io/dokka/1.6.10/user_guide/base-specific/frontend/#prerequisites">
     * Dokka modifying frontend assets</a>
     */
    val dokkaBaseRef = "org.jetbrains.dokka.base.DokkaBase"
    val dokkaConfDir = rootDir.resolve("buildSrc/src/main/kotlin/io/spine/internal/gradle/dokka")

    /**
     * Dokka Base configuration provides `customStyleSheets` property to which we can
     * pass our css files overriding styles generated by Dokka.
     *
     * Also, there is a `customAssets` property to provide resources. We need to
     * provide an image with the name "logo-icon.svg" to overwrite the default one used by Dokka.
     */
    val dokkaConf = """
        {
            "customStyleSheets": [
                "${dokkaConfDir.resolve("styles/custom-styles.css")}"
             ],
             "customAssets": [
                "${dokkaConfDir.resolve("assets/logo-icon.svg")}"
             ],
             "footerMessage": "Copyright ${LocalDate.now().year}, TeamDev"
        }
        """.trimIndent()

    pluginsMapConfiguration.set(
        mapOf(
            dokkaBaseRef to dokkaConf
        )
    )
}
