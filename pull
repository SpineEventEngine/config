#!/usr/bin/env bash

#
# Copyright 2023, TeamDev. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Redistribution and use in source and/or binary forms, with or without
# modification, must retain the above copyright notice and the following
# disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

################################################################################
#
# The script to update the project configuration files.
#
# The code of the script assumes that:
#   1. The project uses this code as a Git sub-module installed in the `config`
#      directory under the project root.
#   2. The script is called from the root of the project.
#
################################################################################

# Update the module with reference to the latest version.
# In this state there is no current branch.
git submodule update

# Make the `config` dir current.
cd ./config || { echo "Error: 'config' directory is missing."; exit 1; }

# Set the current branch to `master`.
git checkout master

echo "Pulling changes from remote repo"
git pull

echo "Updating IDEA configuration"
cp -R .idea ..

echo "Updating Contributor's Guide"
cp CONTRIBUTING.md ..

echo "Updating Contributor Covenant"
cp CODE_OF_CONDUCT.md ..

echo "Updating Codecov settings"
cp .codecov.yml ..

echo "Updating Sonatype Lift settings"
cp .lift.toml ..

# Copies the file or directory passed as the first parameter to the upper directory,
# only if such a file or directory does not exist there.
function initialize() {
  if [ ! -e ../"$1" ]; then
      echo "Creating $1"
      cp -R "$1" ..
  fi
}

initialize .gitattributes
initialize .gitignore
initialize .github

# Update existing workflows with more recent versions
echo "Updating GitHub workflows"
cp -a .github-workflows/. ../.github/workflows
cp -a .github/workflows/. ../.github/workflows
rm -f ../.github/workflows/detekt-code-analysis.yml # This one is `config`-only workflow.

echo "Cleaning up GitHub workflows"
# TODO:2022-11-15:yevhenii.nadtochii: Drop or update clean-up code below from time to time.
rm -f ../.github/workflows/ensure-reports.updated.yml

echo "Cleaning up Gradle 'buildSrc' scripts"
# TODO:2022-11-02:yevhenii.nadtochii: Drop or update clean-up code below from time to time.
rm -f ../buildSrc/src/main/kotlin/force-jacoco.gradle.kts
rm -f ../buildSrc/src/main/kotlin/deps-between-tasks.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/Scripts.kt
rm -rf ../buildSrc/src/main/kotlin/io/spine/internal/gradle/test
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/dependencies/AutoCommon.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/dependencies/AutoService.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/dependencies/AutoValue.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/publish/ProtoLocators.kt
rm -f ../buildSrc/src/main/kotlin/TaskDependencies.kt
rm -f ../buildSrc/src/main/kotlin/Dependencies.kt
rm -f ../buildSrc/src/main/kotlin/PluginAccessors.kt

# 2023-04-13, remove outdated files.

rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/publish/Artifacts.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/publish/dokka/DokkaExtensions.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/publish/dokka/TaskContainerExtensions.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/publish/publish/DokkaJar.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/publish/publish/ProtoJar.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/publish/publish/TestJar.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/publish/publish/PublishingConfig.kt
rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/publish/publish/Tasks.kt

# 2023-05-20, remove outdated files.

rm -f ../buildSrc/src/main/kotlin/io/spine/internal/gradle/publish/DependencyResolution.kt

# 2023-07-12, remove outdated files.

rm -f ../buildSrc/src/main/kotlin/java-module.gradle.kts
rm -f ../buildSrc/src/main/kotlin/kotlin-jvm-module.gradle.kts
rm -f ../buildSrc/src/main/kotlin/kotlin-kmm-jvm.gradle.kts

echo "Updating Gradle 'buildSrc' scripts"
cp -R buildSrc ..

echo "Updating Gradle Wrapper"
cp -R ./gradle ..
cp gradlew ..
cp gradlew.bat ..

cd ..

echo "Adding 'buildSrc' sources to Git..."
git add ./buildSrc/src

echo "Done."
